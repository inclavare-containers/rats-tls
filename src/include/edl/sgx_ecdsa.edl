enclave {
	include "api.h"
	include "cert.h"
        include "rats-tls/verifier.h"
        include "rats-tls/attester.h"
	include "err.h"
	include "sgx_report.h"
	include "sgx_quote_3.h"

	from "sgx_dcap_tvl.edl" import *;

	trusted {
		public sgx_status_t ecall_get_target_info([out] sgx_target_info_t* target_info);
	};

	untrusted {
		void ocall_get_target_info([out] sgx_target_info_t *qe_target_info);

		enclave_attester_err_t ocall_qe_get_quote_size([out] uint32_t *quote_size);

		enclave_attester_err_t ocall_qe_get_quote([in]sgx_report_t *report, uint32_t quote_size,
                                                [out, size=quote_size] uint8_t *quote);

		enclave_verifier_err_t ocall_ecdsa_verify_evidence([user_check] enclave_verifier_ctx_t *ctx,
                                                                sgx_enclave_id_t enclave_id,
                                                                [in, string] const char *name,
								[in, size=quote_size] sgx_quote3_t *pquote,
								uint32_t quote_size)
			allow(ecall_get_target_info, sgx_tvl_verify_qve_report_and_identity);
	};
};
